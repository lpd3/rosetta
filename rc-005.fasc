(#Y(si::bytecodes nil nil (1 0 16 1 29) #1=#A(t (97) ("ROS-01" si::select-package ros-01::seq-less-than ext::location (defmethod ros-01::seq-less-than (ros-01::seq-a list) (ros-01::seq-b list)) (#2=#P"/data/data/org.eql5.android.repl/files/quicklisp/local-projects/rosetta/rc-005.lisp" . 47) ext::annotate (list list) (ros-01::seq-a ros-01::seq-b) ros-01::seq-a ros-01::seq-b ros-01::rest-a ros-01::rest-b t < > #Y(ros-01::rec nil nil (24 45 11 24 45 12 26 10 0 76 39 5 75 73 38 58 10 1 76 39 6 11 13 73 38 48 10 1 4 12 10 0 4 12 19 2 14 39 6 11 13 73 38 30 10 1 4 12 10 0 4 12 19 2 15 39 5 75 73 38 13 10 1 5 12 10 0 5 12 32 2 18 2 29) #1# #2# 47) #Y(ros-01::seq-less-than nil nil (24 45 9 24 45 10 26 31 1 16 13 2 13 1 32 0 18 2 43 1 29) #1# #2# 47) clos::install-method (defmethod ros-01::seq-less-than (ros-01::seq-a vector) (ros-01::seq-b vector)) (#2# . 1599) (vector vector) (ros-01::seq-a ros-01::seq-b) #:loop-across-list2382 #:loop-across-index-2381 #:loop-across-vector-2380 ros-01::a-elt #:loop-across-list2385 #:loop-across-index-2384 #:loop-across-vector-2383 ros-01::b-elt 0 length >= aref 1+ #Y(ros-01::seq-less-than nil nil (24 45 9 24 45 10 26 57 2 60 157 77 13 2 9 0 9 0 46 23 46 24 46 25 46 26 77 13 5 9 0 9 0 46 27 46 28 46 29 46 30 57 31 61 2 14 99 10 6 16 32 51 8 10 2 16 32 51 4 13 7 13 8 19 2 33 39 4 35 0 1 13 6 13 7 19 2 34 51 5 10 7 16 35 51 7 13 3 13 4 19 2 33 39 4 35 0 1 13 2 13 3 19 2 34 51 1 10 3 16 35 51 3 13 5 13 1 19 2 14 39 8 11 13 73 36 9 38 14 13 5 13 1 19 2 15 39 5 75 73 36 9 35 0 0 10 11 16 32 12 10 10 16 32 12 19 2 14 36 9 62 73 43 4 43 4 63 29) #1# #2# 1599) (defmethod ros-01::seq-less-than ros-01::seq-a ros-01::seq-b) (#2# . 2043) (t t) (ros-01::seq-a ros-01::seq-b) ros-01::len-a ros-01::len-b min ros-01::len-min si::%dotimes-var ros-01::i elt ros-01::elt-b ros-01::elt-a #Y(ros-01::seq-less-than nil nil (24 45 9 24 45 10 26 57 2 60 108 10 2 16 32 45 41 10 2 16 32 45 42 13 1 13 0 19 2 43 45 44 10 0 45 45 8 0 45 46 38 56 13 7 10 0 17 47 12 13 6 10 0 17 47 12 46 48 46 49 13 0 13 1 19 2 14 39 8 11 13 73 36 7 38 14 13 0 13 1 19 2 15 39 5 75 73 36 7 43 2 10 0 16 35 51 0 13 0 13 1 19 2 14 40 -63 13 4 13 3 19 2 14 43 2 43 3 63 29) #1# #2# 2043) ros-01::slt-main (defun ros-01::slt-main) (#2# . 2492) :lambda-list (1 2 3 4 5) ros-01::list-a (5 4 3 2 1) ros-01::list-b (1 2 3) ros-01::list-c #A(t (5) (1 2 3 4 5)) ros-01::vector-a #A(t (5) (5 4 3 2 1)) ros-01::vector-b #A(t (3) (1 2 3)) ros-01::vector-c ros-01::sequences si::%dolist-var "~&(seq-less-than ~A ~A) => ~A~%" format #Y(ros-01::slt-main nil nil (26 1 55 45 56 1 57 45 58 1 59 45 60 1 61 45 62 1 63 45 64 1 65 45 66 13 5 13 4 13 3 13 2 13 1 10 0 6 6 45 67 10 0 45 68 38 56 10 0 4 45 9 10 2 45 68 38 32 10 0 4 45 10 14 13 15 69 13 2 13 0 13 2 13 0 19 2 2 12 19 5 70 10 1 5 51 1 43 1 10 0 40 -34 43 1 10 1 5 51 1 43 1 10 0 40 -58 75 45 9 0 43 1 43 1 43 7 29) #1# #2# 2492) si::fset ros-01::multifactorial (defun ros-01::multifactorial) (#2# . 3045) (ros-01::n ros-01::degree) ros-01::n ros-01::degree (and (integerp ros-01::n) (plusp ros-01::n)) si::assert-failure integerp plusp (and (integerp ros-01::degree) (plusp ros-01::degree)) ros-01::multiplier ros-01::result - * <= #Y(ros-01::multifactorial nil nil (24 45 77 24 45 78 26 38 6 15 79 19 1 80 10 1 16 81 39 5 10 1 16 82 76 40 -17 38 6 15 83 19 1 80 10 0 16 81 39 5 10 0 16 82 76 40 -17 10 1 45 84 10 2 45 85 38 19 13 1 13 2 19 2 86 51 1 13 1 13 0 19 2 87 51 0 13 1 13 2 19 2 88 39 -26 10 0 73 43 2 29) #1# #2# 3045) ros-01::multimain (defun ros-01::multimain) (#2# . 5809) "~%~%Degree ~D:~%" ros-01::mem "~%~D: ~D~%" #Y(ros-01::multimain nil nil (26 8 1 45 78 38 58 14 13 15 93 13 0 19 3 70 8 1 45 94 38 25 14 13 15 95 13 0 13 0 13 1 19 2 73 12 19 4 70 10 0 16 35 12 53 0 13 0 9 10 19 2 15 39 -32 43 1 10 0 16 35 12 53 0 13 0 9 5 19 2 15 39 -65 75 73 43 1 29) #1# #2# 5809))) #2# 0) #Y(si::bytecodes nil nil (15 2 15 3 15 4 15 5 19 4 6 15 2 77 15 7 15 8 34 17 12 19 5 18 29) #1# #2# 47) #Y(si::bytecodes nil nil (15 2 15 3 15 19 15 20 19 4 6 15 2 77 15 21 15 22 1 36 12 19 5 18 29) #1# #2# 1599) #Y(si::bytecodes nil nil (15 2 15 3 15 37 15 38 19 4 6 15 2 77 15 39 15 40 1 50 12 19 5 18 29) #1# #2# 2043) #Y(si::bytecodes nil nil (15 51 15 3 15 52 15 53 19 4 6 15 51 14 54 77 77 19 4 6 15 51 1 71 12 19 2 72 1 51 73 29) #1# #2# 2492) #Y(si::bytecodes nil nil (15 73 15 3 15 74 15 75 19 4 6 15 73 14 54 77 15 76 19 4 6 15 73 1 89 12 19 2 72 1 73 73 29) #1# #2# 3045) #Y(si::bytecodes nil nil (15 90 15 3 15 91 15 92 19 4 6 15 90 14 54 77 77 19 4 6 15 90 1 96 12 19 2 72 1 90 73 29) #1# #2# 5809))
